// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should compare the cloudFormation template for the whole stack 1`] = `
Object {
  "Outputs": Object {
    "MyStackapigatewayEndpointDA24E944": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "MyStackapigateway437AED50",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "MyStackapigatewayDeploymentStageprod0819FE2D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563ArtifactHashC1EA1F03": Object {
      "Description": "Artifact hash for asset \\"2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563\\"",
      "Type": "String",
    },
    "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3Bucket5E5AE65E": Object {
      "Description": "S3 bucket for asset \\"2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563\\"",
      "Type": "String",
    },
    "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50": Object {
      "Description": "S3 key for asset version \\"2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "HelloHandler2E4FBA4D": Object {
      "DependsOn": Array [
        "HelloHandlerServiceRole11EF7C63",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3Bucket5E5AE65E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_REGION": Object {
              "Ref": "AWS::Region",
            },
            "PRIMARY_KEY": "employeeId",
            "TABLE_NAME": "MyStack_employees",
          },
        },
        "Handler": "hello.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloHandlerServiceRole11EF7C63",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHandlerServiceRole11EF7C63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyStackapigateway437AED50": Object {
      "Properties": Object {
        "Name": "MyStack_apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "MyStackapigatewayAccount9F47D461": Object {
      "DependsOn": Array [
        "MyStackapigateway437AED50",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "MyStackapigatewayCloudWatchRole8F52FF5F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "MyStackapigatewayCloudWatchRole8F52FF5F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyStackapigatewayDeployment72E4AA6347805a805dc92461ff4782ad8b3d8d82": Object {
      "DependsOn": Array [
        "MyStackapigatewaycreateemployeePOST44C16C57",
        "MyStackapigatewaycreateemployee735165A1",
        "MyStackapigatewaygetallemployeesGET9E839849",
        "MyStackapigatewaygetallemployeesFC6C3641",
        "MyStackapigatewayhelloGET7BAC5958",
        "MyStackapigatewayhello9DEE22FC",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "MyStackapigatewayDeploymentStageprod0819FE2D": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "MyStackapigatewayDeployment72E4AA6347805a805dc92461ff4782ad8b3d8d82",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "MyStackapigatewaycreateemployee735165A1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "MyStackapigateway437AED50",
            "RootResourceId",
          ],
        },
        "PathPart": "createemployee",
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyStackapigatewaycreateemployeePOST44C16C57": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "postEmployeeLambdaId21D06B84",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewaycreateemployee735165A1",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewaycreateemployeePOSTApiPermissionMyTestStackMyStackapigateway1DF73A8BPOSTcreateemployeeBD15F6E2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaId21D06B84",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod0819FE2D",
              },
              "/POST/createemployee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewaycreateemployeePOSTApiPermissionTestMyTestStackMyStackapigateway1DF73A8BPOSTcreateemployeeF74E9143": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaId21D06B84",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/test-invoke-stage/POST/createemployee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewaygetallemployeesFC6C3641": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "MyStackapigateway437AED50",
            "RootResourceId",
          ],
        },
        "PathPart": "getallemployees",
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyStackapigatewaygetallemployeesGET9E839849": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "getAllEmployeesLambdaIdB222E456",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewaygetallemployeesFC6C3641",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewaygetallemployeesGETApiPermissionMyTestStackMyStackapigateway1DF73A8BGETgetallemployees5D92AACF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaIdB222E456",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod0819FE2D",
              },
              "/GET/getallemployees",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewaygetallemployeesGETApiPermissionTestMyTestStackMyStackapigateway1DF73A8BGETgetallemployees92A26A5A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaIdB222E456",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/test-invoke-stage/GET/getallemployees",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayhello9DEE22FC": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "MyStackapigateway437AED50",
            "RootResourceId",
          ],
        },
        "PathPart": "hello",
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyStackapigatewayhelloGET7BAC5958": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHandler2E4FBA4D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewayhello9DEE22FC",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigateway437AED50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewayhelloGETApiPermissionMyTestStackMyStackapigateway1DF73A8BGEThello66227B81": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHandler2E4FBA4D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod0819FE2D",
              },
              "/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayhelloGETApiPermissionTestMyTestStackMyStackapigateway1DF73A8BGEThelloCE436140": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHandler2E4FBA4D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigateway437AED50",
              },
              "/test-invoke-stage/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "employeesDynamoDBIntanceID2B51FA38": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "employeeId",
            "AttributeType": "N",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "employeeId",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "MyStack_employees",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "getAllEmployeesLambdaIdB222E456": Object {
      "DependsOn": Array [
        "getAllEmployeesLambdaIdServiceRoleDefaultPolicyAA33EFB9",
        "getAllEmployeesLambdaIdServiceRole04E912E9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3Bucket5E5AE65E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "PRIMARY_KEY": "employeeId",
            "TABLE_NAME": "MyStack_employees",
          },
        },
        "Handler": "get-all.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaIdServiceRole04E912E9",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "getAllEmployeesLambdaIdServiceRole04E912E9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getAllEmployeesLambdaIdServiceRoleDefaultPolicyAA33EFB9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "employeesDynamoDBIntanceID2B51FA38",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getAllEmployeesLambdaIdServiceRoleDefaultPolicyAA33EFB9",
        "Roles": Array [
          Object {
            "Ref": "getAllEmployeesLambdaIdServiceRole04E912E9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "postEmployeeLambdaId21D06B84": Object {
      "DependsOn": Array [
        "postEmployeeLambdaIdServiceRoleDefaultPolicyFED76179",
        "postEmployeeLambdaIdServiceRole3F633F3E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3Bucket5E5AE65E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2b2a22ec23ce15687b54a2d0c5bc4e6718a2b8dbce7a3c5bbbaa7b2f8c34c563S3VersionKey4BA9CE50",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_REGION": Object {
              "Ref": "AWS::Region",
            },
            "PRIMARY_KEY": "employeeId",
            "TABLE_NAME": "MyStack_employees",
          },
        },
        "Handler": "create.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaIdServiceRole3F633F3E",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "postEmployeeLambdaIdServiceRole3F633F3E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "postEmployeeLambdaIdServiceRoleDefaultPolicyFED76179": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "employeesDynamoDBIntanceID2B51FA38",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "postEmployeeLambdaIdServiceRoleDefaultPolicyFED76179",
        "Roles": Array [
          Object {
            "Ref": "postEmployeeLambdaIdServiceRole3F633F3E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
