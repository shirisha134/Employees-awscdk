// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should compare the cloudFormation template for the whole stack 1`] = `
Object {
  "Outputs": Object {
    "MyStackapigatewayEndpointB5D50007": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "MyStackapigatewayDAC610D1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "MyStackapigatewayDeploymentStageprod39B0FA82",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253ArtifactHashCD3C2BF7": Object {
      "Description": "Artifact hash for asset \\"6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253\\"",
      "Type": "String",
    },
    "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3Bucket6EB586B1": Object {
      "Description": "S3 bucket for asset \\"6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253\\"",
      "Type": "String",
    },
    "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76": Object {
      "Description": "S3 key for asset version \\"6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "HelloHandler64B8C687": Object {
      "DependsOn": Array [
        "HelloHandlerServiceRole8D36B8C4",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3Bucket6EB586B1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "SITE_NAME": "MyStack",
          },
        },
        "Handler": "hello.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloHandlerServiceRole8D36B8C4",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHandlerServiceRole8D36B8C4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyStackapigatewayAccountFD76BB92": Object {
      "DependsOn": Array [
        "MyStackapigatewayDAC610D1",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "MyStackapigatewayCloudWatchRole92A0BC04",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "MyStackapigatewayCloudWatchRole92A0BC04": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyStackapigatewayDAC610D1": Object {
      "Properties": Object {
        "Name": "MyStack_apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "MyStackapigatewayDeploymentBA9C1747277ca116b2d800a0728f39fef54811ba": Object {
      "DependsOn": Array [
        "MyStackapigatewayemployeeGET5841DC4B",
        "MyStackapigatewayemployeePOSTF5A96160",
        "MyStackapigatewayemployee9E2BE57A",
        "MyStackapigatewaywelcomeGET4C09511B",
        "MyStackapigatewaywelcome2A0CC7E5",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "MyStackapigatewayDeploymentStageprod39B0FA82": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "MyStackapigatewayDeploymentBA9C1747277ca116b2d800a0728f39fef54811ba",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "MyStackapigatewayemployee9E2BE57A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "MyStackapigatewayDAC610D1",
            "RootResourceId",
          ],
        },
        "PathPart": "employee",
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyStackapigatewayemployeeGET5841DC4B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "getAllEmployeesLambdaId1533DD0C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewayemployee9E2BE57A",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewayemployeeGETApiPermissionMyTestStackMyStackapigatewayF59093F8GETemployeeC0D42C46": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaId1533DD0C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod39B0FA82",
              },
              "/GET/employee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayemployeeGETApiPermissionTestMyTestStackMyStackapigatewayF59093F8GETemployee7A10208A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaId1533DD0C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/test-invoke-stage/GET/employee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayemployeePOSTApiPermissionMyTestStackMyStackapigatewayF59093F8POSTemployee52EAF59D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaIdEF14D477",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod39B0FA82",
              },
              "/POST/employee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayemployeePOSTApiPermissionTestMyTestStackMyStackapigatewayF59093F8POSTemployee154F72D2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaIdEF14D477",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/test-invoke-stage/POST/employee",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewayemployeePOSTF5A96160": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "postEmployeeLambdaIdEF14D477",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewayemployee9E2BE57A",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewaywelcome2A0CC7E5": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "MyStackapigatewayDAC610D1",
            "RootResourceId",
          ],
        },
        "PathPart": "welcome",
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MyStackapigatewaywelcomeGET4C09511B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHandler64B8C687",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "MyStackapigatewaywelcome2A0CC7E5",
        },
        "RestApiId": Object {
          "Ref": "MyStackapigatewayDAC610D1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MyStackapigatewaywelcomeGETApiPermissionMyTestStackMyStackapigatewayF59093F8GETwelcome30047A50": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHandler64B8C687",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/",
              Object {
                "Ref": "MyStackapigatewayDeploymentStageprod39B0FA82",
              },
              "/GET/welcome",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyStackapigatewaywelcomeGETApiPermissionTestMyTestStackMyStackapigatewayF59093F8GETwelcome182221C7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHandler64B8C687",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "MyStackapigatewayDAC610D1",
              },
              "/test-invoke-stage/GET/welcome",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MyTestStack66C918DF": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "employeeId",
            "AttributeType": "N",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "employeeId",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "MyStack_employees",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "getAllEmployeesLambdaId1533DD0C": Object {
      "DependsOn": Array [
        "getAllEmployeesLambdaIdServiceRoleDefaultPolicyD4ED1DB1",
        "getAllEmployeesLambdaIdServiceRole5D631D19",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3Bucket6EB586B1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "PRIMARY_KEY": "employeeId",
            "TABLE_NAME": "MyStack_employees",
          },
        },
        "Handler": "get-all.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "getAllEmployeesLambdaIdServiceRole5D631D19",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "getAllEmployeesLambdaIdServiceRole5D631D19": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getAllEmployeesLambdaIdServiceRoleDefaultPolicyD4ED1DB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyTestStack66C918DF",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getAllEmployeesLambdaIdServiceRoleDefaultPolicyD4ED1DB1",
        "Roles": Array [
          Object {
            "Ref": "getAllEmployeesLambdaIdServiceRole5D631D19",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "postEmployeeLambdaIdEF14D477": Object {
      "DependsOn": Array [
        "postEmployeeLambdaIdServiceRoleDefaultPolicy059BC5F7",
        "postEmployeeLambdaIdServiceRoleDE741BB7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3Bucket6EB586B1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6c4fcd20971ef98d624572fccc6603a8ceec2ddbc5f6bdd1474faa8c6d28d253S3VersionKeyECF3FF76",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "PRIMARY_KEY": "employeeId",
            "TABLE_NAME": "MyStack_employees",
          },
        },
        "Handler": "create.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "postEmployeeLambdaIdServiceRoleDE741BB7",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "postEmployeeLambdaIdServiceRoleDE741BB7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "postEmployeeLambdaIdServiceRoleDefaultPolicy059BC5F7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyTestStack66C918DF",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "postEmployeeLambdaIdServiceRoleDefaultPolicy059BC5F7",
        "Roles": Array [
          Object {
            "Ref": "postEmployeeLambdaIdServiceRoleDE741BB7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
